<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.mitinyova." />

	<bean id="catMurka" class="com.mitinyova.animals.Cat" autowire="constructor" />

	<bean id="yellow-tangle" class="com.mitinyova.things.Tangle"
		primary="false" />

	<bean id="red-tangle" class="com.mitinyova.things.Tangle" primary="true">
		<constructor-arg value="Red" />
	</bean>

	<bean id="catMurluk" class="com.mitinyova.animals.Cat" autowire="byType">
		<constructor-arg value="Murluk" />
	</bean>

	<bean id="catVaska" class="com.mitinyova.animals.Cat">
		<property name="name" value="Vaska"></property>
	</bean>

	<bean id="personJane" class="com.mitinyova.people.Person">
		<constructor-arg value="Jane" />
	</bean>

	<aop:config>
		<aop:aspect ref="personJane">
			<aop:pointcut expression="execution(* com.mitinyova.animals.Cat.eatSnack(..))"
				id="hunting" />
			<aop:before pointcut-ref="hunting" method="scream" />
			<aop:before pointcut-ref="hunting" method="commandCatch" />
			<aop:after-returning pointcut-ref="hunting"
				method="reactWhenCatched" />
		</aop:aspect>
	</aop:config>

	<bean id="Dog" class="com.mitinyova.animals.Dog" />
	<aop:aspectj-autoproxy />

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/testjdbc" />
		<property name="username" value="root" />
		<property name="password" value="" />
		<property name="initialSize" value="5" />
		<property name="maxTotal" value="10" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<context:component-scan base-package="com.mitinyova.myjdbc" />

	<bean id="worker" class="com.mitinyova.myjdbc.WorkWithCats" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.mitinyova" />
		<property name="hibernateProperties">
			<props>
				<prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="personsWorker" class="com.mitinyova.hibernate.WorkWithPerson"/>
	
	<tx:annotation-driven/>
</beans>
